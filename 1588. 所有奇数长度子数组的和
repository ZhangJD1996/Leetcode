/*
Given an array of positive integers arr, calculate the sum of all possible odd-length subarrays.

A subarray is a contiguous subsequence of the array.

Return the sum of all odd-length subarrays of arr.

给你一个正整数数组 arr ，请你计算所有可能的奇数长度子数组的和。

子数组 定义为原数组中的一个连续子序列。

请你返回 arr 中 所有奇数长度子数组的和 。

 

示例 1：

输入：arr = [1,4,2,5,3]
输出：58
解释：所有奇数长度子数组和它们的和为：
[1] = 1
[4] = 4
[2] = 2
[5] = 5
[3] = 3
[1,4,2] = 7
[4,2,5] = 11
[2,5,3] = 10
[1,4,2,5,3] = 15
我们将所有值求和得到 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58
示例 2：

输入：arr = [1,2]
输出：3
解释：总共只有 2 个长度为奇数的子数组，[1] 和 [2]。它们的和为 3 。
示例 3：

输入：arr = [10,11,12]
输出：66
 

提示：

1 <= arr.length <= 100
1 <= arr[i] <= 1000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sum-of-all-odd-length-subarrays
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/
//暴力求解  1.先找到可能的奇数子数组类型i: 1、3、5、7.....；2.起始下标j和终止下标j+i;3.将每个奇数子数组中的值相加
class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        //sum为总和
        int sum=0;
        //（类型）i为奇数的个数1 3 5 7 .................
        for(int i=1;i<=arr.length;i+=2){
            //j:每种类型的起始下标。类型1的起始下标有：0,1,2,3,4类型3的有0,1,2类型5的有：0
            for(int j=0;j+i<=arr.length;j++){
                //根据下标找到每种类型对应的值并相加
                for(int k=j;k<j+i;k++){
                    sum += arr[k];
                }
            }
        }
        return sum;
    }
}

