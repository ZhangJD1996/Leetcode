/*
假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。

给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n 朵花？能则返回True，不能则返回False。

示例 1:

输入: flowerbed = [1,0,0,0,1], n = 1
输出: True
示例 2:

输入: flowerbed = [1,0,0,0,1], n = 2
输出: False
注意:

数组内已种好的花不会违反种植规则。
输入的数组长度范围为 [1, 20000]。
n 是非负整数，且不会超过输入数组的大小。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/can-place-flowers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/
class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        //i为索引位置，count为能种入的花的数量
        int i = 0,count = 0;

        while(i < flowerbed.length){
            //如果索引的值等于0，且左右两边的值都等于0，则该位置可以种花
            //如果是第一个和最后一个位置只需判断一边
            //注意：if判断中 i == 0 和 i == flowerbed.length-1 需要在前，否则会造成数组越界
            if(flowerbed[i] == 0 && (i == 0 || (flowerbed[i-1] == 0)) && (i == flowerbed.length-1 || flowerbed[i+1] == 0)){
                //如果满足条件，将其值设为1，count++
                flowerbed[i] = 1;
                count++;
                
                
            }
            //如果count >= n返回true
            if(count >= n){
                    return true;

                }
            i++;
        }
        return false;
    }
}
